import sounddevice as sd
import scipy.io.wavfile as wav
import numpy as np
import keyboard
import requests
import tempfile
import pyperclip
import time
import os

API_URL = "http://127.0.0.1:6431/transcribe"  # —Ç–≤–æ–π –ª–æ–∫–∞–ª—å–Ω—ã–π API
is_recording = False
recording_data = []
samplerate = 16000  # Whisper –ª—é–±–∏—Ç 16–∫–ì—Ü


def callback(indata, frames, time_info, status):
    """–°–æ–±–∏—Ä–∞–µ–º –∑–≤—É–∫ –≤ –ø–∞–º—è—Ç—å"""
    if is_recording:
        recording_data.append(indata.copy())


def toggle_recording():
    global is_recording, recording_data
    if not is_recording:
        print("üéô –ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏...")
        recording_data = []
        is_recording = True
    else:
        print("‚èπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏...")
        is_recording = False
        save_and_transcribe()


def save_and_transcribe():
    global recording_data
    if not recording_data:
        return

    # –°–∫–ª–µ–∏–≤–∞–µ–º –∞—É–¥–∏–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
    audio = np.concatenate(recording_data, axis=0)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as f:
        wav.write(f.name, samplerate, audio)
        temp_path = f.name

    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
    try:
        with open(temp_path, "rb") as f:
            files = {"file": ("audio.wav", f, "audio/wav")}
            data = {
                "language": "ru",   # üîπ —Å—é–¥–∞ —Å—Ç–∞–≤–∏—à—å –Ω—É–∂–Ω—ã–π —è–∑—ã–∫ ("en", "ru", "auto" –∏ —Ç.–¥.)
                "model": "turbo",   # –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å
                "prompt": ""        # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
            }
            resp = requests.post(API_URL, files=files, data=data)

        resp.raise_for_status()
        text = resp.json()["text"].strip()
        print("‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ:", text)

        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –º–µ—Å—Ç–æ –∫—É—Ä—Å–æ—Ä–∞
        pyperclip.copy(text)
        time.sleep(0.1)
        keyboard.write(text)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)
    finally:
        os.unlink(temp_path)


def main():
    print("–ù–∞–∂–º–∏ Alt+Q –¥–ª—è —Å—Ç–∞—Ä—Ç–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏. Esc –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
    keyboard.add_hotkey("alt+q", toggle_recording)

    with sd.InputStream(samplerate=samplerate, channels=1, callback=callback):
        keyboard.wait("esc")


if __name__ == "__main__":
    main()
